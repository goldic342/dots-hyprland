# Lines ending with `# [hidden]` won't be shown on cheatsheet
# Lines starting with #! are section headings

$mainMod = ALT
$scripts = ~/.config/hypr/scripts

#!
##! Shell
# These absolutely need to be on top, or they won't work consistently
bindid = $mainMod, Space, Toggle overview, global, quickshell:overviewToggleRelease # Toggle overview/launcher
bind   = $mainMod, Alt_L, exec, qs ipc call TEST_ALIVE || pkill fuzzel || fuzzel # [hidden]
binditn= $mainMod, catchall, global, quickshell:overviewToggleReleaseInterrupt # [hidden]  Launcher (fallback)
bind   = Ctrl+$mainMod, Alt_L, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse:272, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse:273, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse:274, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse:275, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse:276, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse:277, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse_up,  global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind   = $mainMod, mouse_down,global, quickshell:overviewToggleReleaseInterrupt # [hidden]

bindit = ,Super_L, global, quickshell:workspaceNumber # [hidden]
bindd = $mainMod, H, Clipboard history >> clipboard, global, quickshell:overviewClipboardToggle # Clipboard history >> clipboard
bindd = $mainMod, Period, Emoji >> clipboard, global, quickshell:overviewEmojiToggle # Emoji >> clipboard
bindd = Super, Tab, Toggle overview, global, quickshell:overviewToggle # [hidden] Toggle overview/launcher (alt)
bindd = $mainMod, A, Toggle left sidebar, global, quickshell:sidebarLeftToggle # Toggle left sidebar
bind = Super+Alt, A, global, quickshell:sidebarLeftToggleDetach # [hidden]
bind = Super, B, global, quickshell:sidebarLeftToggle # [hidden]
bind = Super, O, global, quickshell:sidebarLeftToggle # [hidden]
bindd = Super, N, Toggle right sidebar, global, quickshell:sidebarRightToggle # Toggle right sidebar
bindd = Super, Slash, Toggle cheatsheet, global, quickshell:cheatsheetToggle # Toggle cheatsheet
bindd = Super, K, Toggle on-screen keyboard, global, quickshell:oskToggle # Toggle on-screen keyboard
bindd = Super, M, Toggle media controls, global, quickshell:mediaControlsToggle # Toggle media controls
bindd = Ctrl+Alt, Delete, Toggle session menu, global, quickshell:sessionToggle # Toggle session menu
bind = Ctrl+Alt, Delete, exec, qs ipc call TEST_ALIVE || pkill wlogout || wlogout -p layer-shell # [hidden] Session menu (fallback)
bind = Shift+Super+Alt, Slash, exec, qs -p ~/.config/quickshell/welcome.qml # [hidden] Launch welcome app

bindle=, XF86MonBrightnessUp, exec, qs ipc call brightness increment || brightnessctl s 5%+ # [hidden]
bindle=, XF86MonBrightnessDown, exec, qs ipc call brightness decrement || brightnessctl s 5%- # [hidden]
bindle=, XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 2%+ # [hidden]
bindle=, XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%- # [hidden]

bindl = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SINK@ toggle # [hidden]
bindld = Super+Shift,M, Toggle mute, exec, wpctl set-mute @DEFAULT_SINK@ toggle # [hidden]
bindl = Alt ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
bindl = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
bindld = Super+Alt,M, Toggle mic, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
bindd = Ctrl+Super, T, Change wallpaper, exec, ~/.config/quickshell/scripts/colors/switchwall.sh # Change wallpaper
bind = Ctrl+Super, R, exec, killall ags agsv1 gjs ydotool qs quickshell; qs & # Restart widgets

##! Utilities
# Screenshot, Record, OCR, Color picker, Clipboard history
bindd = Super, V, Copy clipboard history entry, exec, qs ipc call TEST_ALIVE || pkill fuzzel || cliphist list | fuzzel --match-mode fzf --dmenu | cliphist decode | wl-copy # [hidden] Clipboard history >> clipboard (fallback)
bindd = Super, Period, Copy an emoji, exec, qs ipc call TEST_ALIVE || pkill fuzzel || $scripts/fuzzel-emoji.sh copy # [hidden] Emoji >> clipboard (fallback)
bindd = Super+Shift, S, Screen snip, exec, qs -p ~/.config/quickshell/screenshot.qml || pidof slurp || hyprshot --freeze --clipboard-only --mode region --silent # Screen snip
# OCR
bindd = Super+Shift, T, Character recognition,exec,grim -g "$(slurp $SLURP_ARGS)" "tmp.png" && tesseract "tmp.png" - | wl-copy && rm "tmp.png" # [hidden]
# Color picker
bindd = Super+Shift, C, Color picker, exec, hyprpicker -a # Pick color (Hex) >> clipboard
# Fullscreen screenshot
bindld = ,Print, Screenshot >> clipboard ,exec,grim - | wl-copy # Screenshot >> clipboard
bindld = Ctrl,Print, Screenshot >> clipboard & save, exec, mkdir -p $(xdg-user-dir PICTURES)/Screenshots && grim $(xdg-user-dir PICTURES)/Screenshots/Screenshot_"$(date '+%Y-%m-%d_%H.%M.%S')".png # Screenshot >> clipboard & file
# Recording stuff
bindd = Super+Alt, R, Record region (no sound), exec, $scripts/record.sh # Record region (no sound)
bindd = Ctrl+Alt, R, Record screen (no sound), exec, $scripts/record.sh --fullscreen # [hidden] Record screen (no sound)
bindd = Super+Shift+Alt, R, Record screen (with sound), exec, $scripts/record.sh --fullscreen-sound # Record screen (with sound)
# AI
bindd = Super+Shift+Alt, mouse:273, Generate AI summary for selected text, exec, $scripts/ai/primary-buffer-query.sh # AI summary for selected text

#!
##! Window
# Focusing
bindm = $mainMod, mouse:272, movewindow # [hidden]
bindm = $mainMod, mouse:273, resizewindow # [hidden]

bind   = $mainMod, h, movefocus, l # [hidden]
bind   = $mainMod, l, movefocus, r # [hidden]
bind   = $mainMod, k, movefocus, u # [hidden]
bind   = $mainMod, j, movefocus, d # [hidden]

bind   = $mainMod+Shift, h, movewindow, l # [hidden]
bind   = $mainMod+Shift, l, movewindow, r # [hidden]
bind   = $mainMod+Shift, k, movewindow, u # [hidden] 
bind   = $mainMod+Shift, j, movewindow, d # [hidden]

bind = $mainMod, Q, killactive, # Close
bind = $mainMod+Shift, Q, exec, hyprctl kill # Forcefully zap a window

bind = $mainMod SHIFT, I, centerwindow

# Window size 
#/# binde = Super, ;/',, # Adjust split ratio
binde = $mainMod, u, splitratio, -0.1 # [hidden]
binde = $mainMod, d, splitratio, +0.1 # [hidden]

# Relativly resize window
#binde = $mainMod CTRL, l, resizeactive, 10% 0
#binde = $mainMod CTRL, h, resizeactive, -10% 0
#binde = $mainMod CTRL, k, resizeactive, 0 -10%
#binde = $mainMod CTRL, j, resizeactive, 0 10%

# Positioning mode
bind = $mainMod, V, togglefloating, # Float/Tile
bind = $mainMod, F, fullscreen, 0 # Fullscreen
bind = $mainMod, P, pin # Pin

#/# bind = Super+Alt, Hash,, # Send to workspace # (1, 2, 3,...)
bind = $mainMod Shift, 1, exec, $scripts/workspace_action.sh movetoworkspacesilent 1 # [hidden]
bind = $mainMod Shift, 2, exec, $scripts/workspace_action.sh movetoworkspacesilent 2 # [hidden]
bind = $mainMod Shift, 3, exec, $scripts/workspace_action.sh movetoworkspacesilent 3 # [hidden]
bind = $mainMod Shift, 4, exec, $scripts/workspace_action.sh movetoworkspacesilent 4 # [hidden]
bind = $mainMod Shift, 5, exec, $scripts/workspace_action.sh movetoworkspacesilent 5 # [hidden]
bind = $mainMod Shift, 6, exec, $scripts/workspace_action.sh movetoworkspacesilent 6 # [hidden]
bind = $mainMod Shift, 7, exec, $scripts/workspace_action.sh movetoworkspacesilent 7 # [hidden]
bind = $mainMod Shift, 8, exec, $scripts/workspace_action.sh movetoworkspacesilent 8 # [hidden]
bind = $mainMod Shift, 9, exec, $scripts/workspace_action.sh movetoworkspacesilent 9 # [hidden]
bind = $mainMod Shift, 0, exec, $scripts/workspace_action.sh movetoworkspacesilent 10 # [hidden]

# #/# bind = Super+Shift, Scroll ↑/↓,, # Send to workspace left/right
bind = $mainMod, mouse_down, workspace, e+1 # [hidden]
bind = $mainMod, mouse_up, workspace, e-1 # [hidden]

#bind = $mainMod, Tab, cyclenext # [hidden] sus keybind

##! Workspace
# Switching
#/# bind = Super, Hash,, # Focus workspace # (1, 2, 3,...)
bind = $mainMod, 1, exec, $scripts/workspace_action.sh workspace 1 # [hidden] 
bind = $mainMod, 2, exec, $scripts/workspace_action.sh workspace 2 # [hidden]
bind = $mainMod, 3, exec, $scripts/workspace_action.sh workspace 3 # [hidden]
bind = $mainMod, 4, exec, $scripts/workspace_action.sh workspace 4 # [hidden]
bind = $mainMod, 5, exec, $scripts/workspace_action.sh workspace 5 # [hidden]
bind = $mainMod, 6, exec, $scripts/workspace_action.sh workspace 6 # [hidden]
bind = $mainMod, 7, exec, $scripts/workspace_action.sh workspace 7 # [hidden]
bind = $mainMod, 8, exec, $scripts/workspace_action.sh workspace 8 # [hidden]
bind = $mainMod, 9, exec, $scripts/workspace_action.sh workspace 9 # [hidden]
bind = $mainMod, 0, exec, $scripts/workspace_action.sh workspace 10 # [hidden]


# Move using tab
bind = $mainMod, tab, workspace, m+1
bind = $mainMod SHIFT, tab, workspace, m-1

#/# bind = $mainMod+Ctrl, ←/→,, # Focus left/right
bind = $mainMod+Ctrl, l, workspace, r+1 # [hidden]
bind = $mainMod+Ctrl, h, workspace, r-1 # [hidden]

## Special
bind = $mainMod, W, togglespecialworkspace, # Toggle scratchpad
bind = $mainMod, X, movetoworkspace, special

#!
# Testing
bind = $mainMod+Super, f11, exec, bash -c 'RANDOM_IMAGE=$(find ~/Pictures -type f | grep -v -i "nipple" | grep -v -i "pussy" | shuf -n 1); ACTION=$(notify-send "Test notification with body image" "This notification should contain your user account <b>image</b> and <a href=\"https://discord.com/app\">Discord</a> <b>icon</b>. Oh and here is a random image in your Pictures folder: <img src=\"$RANDOM_IMAGE\" alt=\"Testing image\"/>" -a "Hyprland keybind" -p -h "string:image-path:/var/lib/AccountsService/icons/$USER" -t 6000 -i "discord" -A "openImage=Open profile image" -A "action2=Open the random image" -A "action3=Useless button"); [[ $ACTION == *openImage ]] && xdg-open "/var/lib/AccountsService/icons/$USER"; [[ $ACTION == *action2 ]] && xdg-open \"$RANDOM_IMAGE\"' # [hidden]
bind = $mainMod+Super, f12, exec, bash -c 'RANDOM_IMAGE=$(find ~/Pictures -type f | grep -v -i "nipple" | grep -v -i "pussy" | shuf -n 1); ACTION=$(notify-send "Test notification" "This notification should contain a random image in your <b>Pictures</b> folder and <a href=\"https://discord.com/app\">Discord</a> <b>icon</b>.\n<i>Flick right to dismiss!</i>" -a "Discord (fake)" -p -h "string:image-path:$RANDOM_IMAGE" -t 6000 -i "discord" -A "openImage=Open profile image" -A "action2=Useless button" -A "action3=Cry more"); [[ $ACTION == *openImage ]] && xdg-open "/var/lib/AccountsService/icons/$USER"' # [hidden]
bind = $mainMod+Super, Equal, exec, notify-send "Urgent notification" "Ah hell no" -u critical -a 'Hyprland keybind' # [hidden]

##! Session
bindd = $mainMod, M, Lock, exec, loginctl lock-session # Lock
bindld = $mainMod+Shift, M, Suspend system, exec, sleep 0.1 && systemctl suspend || loginctl suspend # Sleep

##! Screen
# Zoom
binde = $mainMod, Minus, exec, qs ipc call zoom zoomOut # Zoom out
binde = $mainMod, Equal, exec, qs ipc call zoom zoomIn # Zoom in
binde = $mainMod, Minus, exec, qs ipc call TEST_ALIVE || $scripts/zoom.sh decrease 0.1 # [hidden] Zoom out
binde = $mainMod, Equal, exec, qs ipc call TEST_ALIVE || $scripts/zoom.sh increase 0.1 # [hidden] Zoom in

##! Media
bindl= $mainMod+Shift, N, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"` # Next track
bindl= ,XF86AudioNext, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"` # [hidden]
bindl= ,XF86AudioPrev, exec, playerctl previous # [hidden]
bind = $mainMod+Shift+Ctrl, mouse:275, exec, playerctl previous # [hidden]
bind = $mainMod+Shift+Ctrl, mouse:276, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"` # [hidden] bindl= $mainMod+Shift, B, exec, playerctl previous # Previous track bindl= $mainMod+Shift, P, exec, playerctl play-pause # Play/pause media bindl= ,XF86AudioPlay, exec, playerctl play-pause # [hidden] bindl= ,XF86AudioPause, exec, playerctl play-pause # [hidden]

##! Apps
bind = $mainMod, Return, exec, kitty # Terminal
bind = $mainMod, E, exec, $scripts/launch_first_available.sh "dolphin" "nautilus" "nemo" "thunar" "kitty -1 fish -c yazi" # File manager
bind = $mainMod + Shift, F,  exec, firefox # Browser
bind = $mainMod, C, exec, kitty -1 nvim # Code editor
#bind = $mainMod + Ctrl, V, exec, $scripts/launch_first_available.sh "pavucontrol-qt" "pavucontrol" # Volume mixer
bind = $mainMod, I, exec, qs -p ~/.config/quickshell/settings.qml # Settings app
bind = Ctrl+Shift, Escape, exec, kitty -1 bpytop # Task manager

# Cursed stuff
## Make window not amogus large
bind = Ctrl+Super, Backslash, resizeactive, exact 640 480 # [hidden]
